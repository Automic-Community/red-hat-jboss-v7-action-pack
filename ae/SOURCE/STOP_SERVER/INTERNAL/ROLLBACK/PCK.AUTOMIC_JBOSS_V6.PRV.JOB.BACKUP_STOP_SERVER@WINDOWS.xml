<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="11.0.0">
<JOBS_WINDOWS AttrType="WINDOWS" name="PCK.AUTOMIC_JBOSS_V6.PRV.JOB.BACKUP_STOP_SERVER@WINDOWS">
<XHEADER state="1">
<Title/>
<ArchiveKey1/>
<ArchiveKey2/>
<Active>1</Active>
<OH_SubType/>
<CustomAttributes KeyListID="0" dataRequestID="0"/>
</XHEADER>
<OUTPUTREG state="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>|&lt;WIN&gt;|HOST</HostDst>
<HostATTR_Type>WINDOWS</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>1</AutoDeactErrorFree>
<DeactWhen>ANY_OK</DeactWhen>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>0</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>1</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_WINDOWS state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<IsGenerated>0</IsGenerated>
<BAT>0</BAT>
<COM>0</COM>
<WinBatch>1</WinBatch>
<Standard>1</Standard>
<Minimized>0</Minimized>
<Maximized>0</Maximized>
<JObjDefault>1</JObjDefault>
<JObjYes>0</JObjYes>
<JObjNo>0</JObjNo>
<WorkingDirectory>c:\</WorkingDirectory>
<Command/>
<LogOn>0</LogOn>
<ShowJob>0</ShowJob>
</ATTR_WINDOWS>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| |</FcstStatus>

<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1">
<PSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1">
<MSCRI><![CDATA[!Backup only in case server was started using domain.bat/standalone.bat.
!Command line used to run JBoss will be backed up.
:INCLUDE PCK.ITPA_SHARED.PUB.INCLUDE.POWERSHELL_UTILITY
:INCLUDE PCK.AUTOMIC_JBOSS_V6.PRV.INCLUDE.ATTACH
: INCLUDE PCK.AUTOMIC_JBOSS_V6.PRV.INCLUDE.PS.GET_NETWORK_STATISTICS@WINDOWS
function backUpPID {
: IF &UC4RB_JBOSS_HOST# EQ ""
!   If host and port is not provided, use values defined in jboss-cli.xml. If this file is not available, use default value (localhost:9999)
    $output = $(java -jar "&$AGENT_RESOURCES_CLIENT#jboss-v6-tool.jar" xml ExecutePath -xml "&UC4RB_JBOSS_HOME#\bin\jboss-cli.xml" -x "/jboss-cli/default-controller" -filter first)
    $output = $($output | findstr XML-Execute-Result:)

    if ($output -match "\<host\>(?<host>.*?)\</host\>") {
      $jbossHost = $matches.host
    } else {
      $jbossHost = "127.0.0.1"
    }

    if ($output -match "\<port\>(?<port>.*?)\</port\>") {
      $jbossPort = $matches.port
    } else {
      $jbossPort = "9999"
    }
: ELSE
    $jbossHost = "&UC4RB_JBOSS_HOST#"
    $jbossPort = "&UC4RB_JBOSS_PORT#"
: ENDIF

! Convert hostname to IP address
  $LocalAddresses = ([System.Net.Dns]::GetHostAddresses($jbossHost) | Select-Object -ExpandProperty IPAddressToString)

  $PIDs = @()
  (Get-NetworkStatistics) | Where-Object {$_.State -eq "LISTENING" -and $_.LocalPort -eq $jbossPort} | foreach {
!   If listening address is 0.0.0.0 or match JBoss address -> JBoss PID
    if ( ($LocalAddresses -contains  $_.LocalAddress) -or ($_.LocalAddress -eq "0.0.0.0") ) {
      $PIDs += $_.PID
    }
  }

! Only 1 PID should have the same {IP:Port}.
  if ($PIDs.count -ne 1) {
    Write-Host "Backup error: Can not get JBoss PID from $jbossHost`:$jbossPort. Maybe JBoss is not running. Rollback will not be available."
    exit 0
  }

  $JB_PID = $PIDs[0]

! Reformat path. Replace \ -> \\. For Powershell compatible
  cd "&UC4RB_JBOSS_HOME#"
  if ($? -ne 1) {
    Write-Host "JBoss home directory does not exist"
    exit 0
  }

  $jbossHome=(pwd | select Path).Path -replace "\\", "\\"

! The PID should belong to JBoss
  $isPidJBoss = @(Get-WmiObject win32_process -Filter "Commandline like '%$jbossHome%'" | Where-Object {$_.ProcessId -eq $JB_PID} | select commandline).count

  if ($isPidJBoss -ne 1) {
    Write-Host "Backup error: $JB_PID does not belong to JBoss. Maybe JBoss is not running. Rollback will not be available."
    exit 0
  }

  Return $JB_PID
}

!----------------------------------------------------------------------------------------------------
:IF &UC4RB_JBOSS_OPERATING_MODE# = "Managed Domain"
:  IF &UC4RB_JBOSS_SERVER# NE ""
:    PRINT JBoss server instances in Managed Domain mode will be stopped. No need to backup.
:    EXIT 0
:  ENDIF
:ENDIF

:IF &UC4RB_JBOSS_SERVICE_NAME# NE ""
:  PRINT JBoss service will be stopped. No need to backup.
:  EXIT 0
:ENDIF

if (!(Test-Path "&UC4RB_BACKUP_DIRECTORY#")) {
  mkdir "&UC4RB_BACKUP_DIRECTORY#" | Out-Null
  if ($? -ne 1) {
    Write-Host "Can't create backup directory: &UC4RB_BACKUP_DIRECTORY#. Rollback will not be available."
    exit 0
  }
}

$JB_PID = $(backUpPID)
$JB_CMD = ""

:IF &UC4RB_JBOSS_OPERATING_MODE# = "Standalone"
   $JB_CMD = (Get-WmiObject win32_process -Filter "ProcessId='$JB_PID'" | select commandline).commandline
:ELSE
!  Need PPID that start the Host Controller process for Rollback action.
   $JB_PPID = (Get-WmiObject win32_process -Filter "ProcessId='$JB_PID'" | select parentprocessid).parentprocessid
   $JB_PID = $JB_PPID
   $JB_CMD = (Get-WmiObject win32_process -Filter "ProcessId='$JB_PID'" | select commandline).commandline
:ENDIF

if ($JB_CMD -ne "") {
  echo COMMAND=$JB_CMD > "&UC4RB_BACKUP_REPORT#"
  Write-Host "JBoss command saved in &UC4RB_BACKUP_REPORT#:"
  echo $JB_CMD
} else {
  Write-Host "Can't get JBoss command used when server was started. Rollback will not be available."
}
]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_WINDOWS>
</uc-export>