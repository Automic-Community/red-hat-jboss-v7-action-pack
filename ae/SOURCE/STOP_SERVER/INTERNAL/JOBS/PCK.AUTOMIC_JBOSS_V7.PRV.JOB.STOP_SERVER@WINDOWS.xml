<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="11.0.0">
<JOBS_WINDOWS AttrType="WINDOWS" name="PCK.AUTOMIC_JBOSS_V7.PRV.JOB.STOP_SERVER@WINDOWS">
<XHEADER state="1">
<Title/>
<ArchiveKey1/>
<ArchiveKey2/>
<Active>1</Active>
<OH_SubType/>
<CustomAttributes KeyListID="0" dataRequestID="0"/>
</XHEADER>
<OUTPUTREG state="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>|&lt;WIN&gt;|HOST</HostDst>
<HostATTR_Type>WINDOWS</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>1</AutoDeactErrorFree>
<DeactWhen>ANY_OK</DeactWhen>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>0</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>1</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_WINDOWS state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<IsGenerated>0</IsGenerated>
<BAT>0</BAT>
<COM>0</COM>
<WinBatch>1</WinBatch>
<Standard>1</Standard>
<Minimized>0</Minimized>
<Maximized>0</Maximized>
<JObjDefault>1</JObjDefault>
<JObjYes>0</JObjYes>
<JObjNo>0</JObjNo>
<WorkingDirectory>c:\</WorkingDirectory>
<Command/>
<LogOn>0</LogOn>
<ShowJob>0</ShowJob>
</ATTR_WINDOWS>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| |</FcstStatus>

<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1">
<PSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB
:IF &UC4RB_JBOSS_OPERATING_MODE# <> "Standalone" OR "Managed Domain"
:  PRINT "&UC4RB_JBOSS_OPERATING_MODE# must be either Standalone or Managed Domain"
:  EXIT 1
:ENDIF]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1">
<MSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PUB.INCLUDE.POWERSHELL_UTILITY
:INCLUDE PCK.AUTOMIC_JBOSS_V7.PRV.INCLUDE.ATTACH
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN
:SET &UC4RB_CONVERTED_STRING# = &UC4RB_JBOSS_HOME#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CONVERT_SLASHES_WINDOWS_STYLE
:SET &UC4RB_JBOSS_HOME# = &UC4RB_CONVERTED_STRING#

:INCLUDE PCK.AUTOMIC_JBOSS_V7.PRV.INCLUDE.JBOSS_CLI@WINDOWS

!Escaped jboss-cli.bat
$env:NOPAUSE="True"

!Used when Host Controller is not defined
$global:HC=""

function FailIfNotRunning {
:  IF  &UC4RB_JBOSS_FAIL_STOPPED#  = "YES"
    exit 1;
:  ELSE
    exit 0;
:  ENDIF
}

!----------------------------------------------------------------------------------------------------
function IsServerRunning {
    $isServerRunning=""

    $output=$(&UC4_JBOSS_CLI# --command=`"/host=$HC/server-config=$args`:read-attribute`(name=status`)`")
    $RC=$?
    Write-Host ($output | findstr /v "ARATools Version: Date: GmbH" | Out-String)
    if( $RC -ne 1 ) {
      if ( $LASTEXITCODE -ne 0 ) {
        $retcode = $LASTEXITCODE
      } else {
        $retcode = 1
      }
      __uc_return( $retcode )
    }

    $output | findstr /C:"\`"success\`"" | Out-Null
    if ($? -eq 1) {
      $output | findstr /C:"\`"STARTED\`""
      $isServerRunning=$?
    } else {
      Write-Host "Could not get information from $args of host $HC. Aborting ..."
      exit 1
    }

    if ($isServerRunning -eq 1) {
      Return 1
    } else {
      Return 0
    }
}

!----------------------------------------------------------------------------------------------------
function IsJBossRunning {

  $quit_output =  &UC4_JBOSS_CLI# --command="quit"
  $quit_output | findstr /C:"Failed to connect to the controller" | Out-Null
  $RC = -not $?
  Write-Host "Is Jboss Running :: $RC"

  if($RC -eq $True) {
    return 1
  } else {
    return 0
  }
}

!----------------------------------------------------------------------------------------------------
function IsHcRunning {

  &UC4_JBOSS_CLI# --command=`"cd host=$args`" | findstr /C:" not found" | Out-Null

  if($? -ne 1) {
    return 1
  } else {
    return 0
  }
}

!----------------------------------------------------------------------------------------------------
function StopJBossEAP {

  $jboss_state = IsJBossRunning

  if( $jboss_state -eq 0) {
    Write-Host "JBoss Server (&UC4RB_JBOSS_OPERATING_MODE#) is not running. Aborting ..."
    FailIfNotRunning
  }

  Write-Host "Trying to stop JBoss using jboss-cli.bat(shutdown)  ..."

: IF &UC4RB_JBOSS_SERVICE_NAME# NE ""
    Write-Host "Trying to stop service &UC4RB_JBOSS_SERVICE_NAME# ..."
    net STOP "&UC4RB_JBOSS_SERVICE_NAME#"
: ELSE
:   IF &UC4RB_JBOSS_OPERATING_MODE# = "Standalone"
      $shutdown_output = &UC4_JBOSS_CLI# --command=`"shutdown`"
:   ELSE
:     IF &UC4RB_JBOSS_HOST_CONTROLLER# NE ""
        if ("$HC" -ne "&UC4RB_JBOSS_HOST_CONTROLLER#") {
          Write-Host "Warning: Rollback will not be available if stopping a non-local host controller."

          $HC="&UC4RB_JBOSS_HOST_CONTROLLER#"
          if ($(IsHcRunning $HC) -eq 0) {
            Write-Host "Host controller: $HC is not running. Aborting ..."
            FailIfNotRunning
          }
        }
:     ENDIF

      &UC4_JBOSS_CLI# --command=`"/host=$HC`:shutdown`" | Out-Null
:   ENDIF
: ENDIF
: INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

  Start-Sleep -s &UC4RB_JBOSS_TIMEOUT#
: INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

  Write-Host "Checking JBoss EAP 7 state ..."
  $jboss_state = IsJBossRunning
  Write-Host "Jboss State  $jboss_state"

  if ($jboss_state -eq 0) {
    Write-Host "JBoss (&UC4RB_JBOSS_OPERATING_MODE#) has been successfully stopped."
    exit 0
: IF &UC4RB_JBOSS_OPERATING_MODE# = "Managed Domain"
  } elseif ($(IsHcRunning $HC) -eq 0) {
    Write-Host "Host controller: $HC has been successfully stopped."
    exit 0
: ENDIF
  } else {
    Write-Host "Failed to stop JBoss. Aborting ..."
    exit 1
  }

}

!----------------------------------------------------------------------------------------------------

cd "&UC4RB_JBOSS_HOME#\bin"
: INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

:IF &UC4RB_JBOSS_OPERATING_MODE# = "Standalone"
  StopJBossEAP
:ELSE
! Find the local host controller (domain controller)
  if ($(IsJBossRunning) -eq 1) {
    $output=$(&UC4_JBOSS_CLI# --command=`":read-attribute`(name=local-host-name`)`")
    $output=$($output | findstr /C:"`"result`"")
    if ($output) {
        $HC = $output.Split('"')[3]
    }
: IF &UC4RB_JBOSS_HOST_CONTROLLER# EQ ""
    Write-Host "JBoss host controller is not defined. Use local host controller: $HC"
: ENDIF
  }

:  IF &UC4RB_JBOSS_SERVER# = ""
     StopJBossEAP
:  ELSE
     if ($(IsJBossRunning) -eq 0) {
       Write-Host "JBoss Domain Controller must be running to stop servers inside the domain. Aborting ..."
       exit 1
     }
:   IF &UC4RB_JBOSS_HOST_CONTROLLER# NE ""
      $HC="&UC4RB_JBOSS_HOST_CONTROLLER#"
:   ENDIF

!    Server instances are separated by commas. Only trying to stop if all server instances are not running.
:    DEFINE &SERVERS#, string, 100
:    FILL &SERVERS#[] = STR_SPLIT(&UC4RB_JBOSS_SERVER#,",")

:    SET &VAR# = 1
:    WHILE &SERVERS#[&VAR#] NE ""
:      SET &SERVER# = STR_TRIM(&SERVERS#[&VAR#])
       Write-Host "Checking server instance: &SERVER# status ..."

       if ($(IsServerRunning &SERVER#) -eq 0) {
         Write-Host "Server instance: &SERVER# is not running. Aborting ..."
         FailIfNotRunning
       } else {
         Write-Host "Server instance: &SERVER# is currently running."
       }
:      SET &VAR# = &VAR# + 1
:    ENDWHILE

:    SET &VAR# = 1
:    WHILE &SERVERS#[&VAR#] NE ""
:      SET &SERVER# = STR_TRIM(&SERVERS#[&VAR#])
       Write-Host "Stopping &SERVER# using JBoss CLI ..."
       $output=$(&UC4_JBOSS_CLI# --command=`"/host=$HC/server-config=&SERVER#:stop`"  | findstr /v "ARATools Version: Date: GmbH")
:      INC PCK.AUTOMIC_JBOSS_V7.PRV.INCLUDE.CHECK_PS_CMD_CUSTOM@WINDOWS

       Start-Sleep -s &UC4RB_JBOSS_TIMEOUT#
:      INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

       Write-Host "Checking server instance: `"&UC4RB_JBOSS_SERVER#`" status again ..."

       if ($(IsServerRunning &SERVER#) -eq 1) {
         Write-Host "Failed to stop &SERVER#. Aborting ..."
         exit 1
       } else {
         Write-Host "&SERVER# has been successfully stopped."
       }
:      SET &VAR# = &VAR# + 1
:    ENDWHILE
:  ENDIF
:ENDIF
]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1">
<OSCRI><![CDATA[:SET &HND# = PREP_PROCESS_REPORT(,,,"* has been successfully stopped.")
:PROCESS &HND#
:   SET &UC4RB_JBOSS_SERVER_STOPPED# = "TRUE"
:ENDPROCESS

:SET &HND2# = PREP_PROCESS_REPORT(,,,"*Rollback will not be available*")
:PROCESS &HND2#
:   SET &UC4RB_JBOSS_SERVER_STOPPED# = "FALSE"
:ENDPROCESS

:PUBLISH &UC4RB_JBOSS_SERVER_STOPPED#,,"WORKFLOW"]]></OSCRI>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_WINDOWS>
</uc-export>