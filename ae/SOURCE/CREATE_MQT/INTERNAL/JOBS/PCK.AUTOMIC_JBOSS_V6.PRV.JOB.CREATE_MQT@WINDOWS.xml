<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="11.0.0">
<JOBS_WINDOWS AttrType="WINDOWS" name="PCK.AUTOMIC_JBOSS_V6.PRV.JOB.CREATE_MQT@WINDOWS">
<XHEADER state="1">
<Title/>
<ArchiveKey1/>
<ArchiveKey2/>
<Active>1</Active>
<OH_SubType/>
<CustomAttributes KeyListID="0" dataRequestID="0"/>
</XHEADER>
<OUTPUTREG state="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>|&lt;WIN&gt;|HOST</HostDst>
<HostATTR_Type>WINDOWS</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>1</AutoDeactErrorFree>
<DeactWhen>ANY_OK</DeactWhen>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>0</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>1</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_WINDOWS state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<IsGenerated>0</IsGenerated>
<BAT>0</BAT>
<COM>0</COM>
<WinBatch>1</WinBatch>
<Standard>1</Standard>
<Minimized>0</Minimized>
<Maximized>0</Maximized>
<JObjDefault>0</JObjDefault>
<JObjYes>1</JObjYes>
<JObjNo>0</JObjNo>
<WorkingDirectory>c:\</WorkingDirectory>
<Command/>
<LogOn>0</LogOn>
<ShowJob>0</ShowJob>
</ATTR_WINDOWS>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| |</FcstStatus>

<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1">
<PSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1">
<MSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PUB.INCLUDE.POWERSHELL_UTILITY
:INCLUDE PCK.AUTOMIC_JBOSS_V6.PRV.INCLUDE.ATTACH
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN
:INCLUDE PCK.AUTOMIC_JBOSS_V6.PRV.INCLUDE.JBOSS_CLI@WINDOWS

:SET &UC4RB_JBOSS_CLI# = &UC4_JBOSS_CLI#

$env:NOPAUSE="True"

:INCLUDE PCK.AUTOMIC_JBOSS_V6.PRV.INCLUDE.MQT_OPTIONS

function FailIfExisting {
  Write-Host &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME# already existed
: IF  &UC4RB_JBOSS_FAIL_EXISTING# = "YES"
    exit 1
: ELSE
:   IF &UC4RB_JBOSS_UPDATE_EXISTING# = 'YES'
      UpdateIfExisting
:   ELSE
      exit 0
:   ENDIF
: ENDIF
}

function UpdateIfExisting {
  Write-Host Updating &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#..

  $result = &UC4RB_JBOSS_CLI# --command=":reload"

! Update queue/topic

  &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_COMMAND# &UC4RB_JBOSS_QUEUE_PARAMS#"
: INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

! Update address-setting?
  UpdateAddressSetting
  Write-Host Successfully updated &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#
  exit 0
}

function UpdateAddressSetting {
:IF &UC4RB_JBOSS_TYPE# = 'Queue'
   $result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/address-setting=jms.queue.&UC4RB_JBOSS_NAME#:remove"
   $result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/address-setting=jms.queue.&UC4RB_JBOSS_NAME#:add(&UC4RB_JBOSS_ADDR_SETTING_PARAMS#)"
:ELSE
:  IF &UC4RB_JBOSS_TYPE# = 'Topic'
     $result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/address-setting=jms.topic.&UC4RB_JBOSS_NAME#:remove"
     $result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/address-setting=jms.topic.&UC4RB_JBOSS_NAME#:add(&UC4RB_JBOSS_ADDR_SETTING_PARAMS#)"
:  ENDIF
:ENDIF
}

Write-Host Checking &UC4RB_JBOSS_TYPE# existence..

! check if the queue/topic exists already
$result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/&UC4RB_JBOSS_JMS_TYPE#=&UC4RB_JBOSS_NAME#:read-resource"

$result = $result | select-string -pattern '"outcome" => "success"' -caseSensitive

if ([bool]($result)) {
  FailIfExisting
}

! reload
$result = &UC4RB_JBOSS_CLI# --command=":reload"

Write-Host Creating new &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#..

! create queue/topic using JBoss CLI command
&UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_COMMAND# add &UC4RB_JBOSS_QUEUE_PARAMS#"
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

$result = &UC4RB_JBOSS_CLI# --command=":reload"

Write-Host Re-checking newly created &UC4RB_JBOSS_TYPE#..

! re-check
sleep 5
$result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/&UC4RB_JBOSS_JMS_TYPE#=&UC4RB_JBOSS_NAME#:read-resource"

$result = $result | select-string -pattern '"outcome" => "success"' -caseSensitive

if ([bool]($result)) {
  Write-Host Successfully created new &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#
} else {
  Write-Host Create new &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME# finished unsuccessfully
  exit 1
}

$result = &UC4RB_JBOSS_CLI# --command=":reload"

Write-Host Creating address-setting for &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#..

! create a new address-setting bounds to this queue/topic
UpdateAddressSetting
!$result = &UC4RB_JBOSS_CLI# --command="&UC4RB_JBOSS_JMS_QUERY_CMD#/address-setting=jms.queue.&UC4RB_JBOSS_NAME#/:add(&UC4RB_JBOSS_ADDR_SETTING_PARAMS#)"

$result = $result | select-string -pattern '"outcome" => "success"' -caseSensitive

if ([bool]($result)) {
  Write-Host Successfully created new address setting for &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#
} else {
  Write-Host Failed to create new address setting for &UC4RB_JBOSS_TYPE# &UC4RB_JBOSS_NAME#, default settings will be used
}

:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_WINDOWS>
</uc-export>